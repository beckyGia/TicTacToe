*,
*::after,
*::before {
  box-sizing: border-box;
}

:root {
  --cell-size: 100px;
  /* used to calculate the size of the x's and o's, they are 90% of the cell size*/
  --mark-size: calc(var(--cell-size) * 0.9);
}

body {
  margin: 0;
}

.board {
  width: 100vw;
  height: 100vh;
  /* used to center the cell*/
  display: grid;
  justify-content: center;
  align-content: center;
  /* used to ensure that the x's and o's are always center */
  justify-items: center;
  align-items: center;
  grid-template-columns: repeat(3, auto);
}

.cell {
  width: var(--cell-size);
  height: var(--cell-size);
  border: 1px solid black;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  cursor: pointer;
}

/* remove the top border of the first row */
.cell:first-child,
.cell:nth-child(2),
.cell:nth-child(3) {
  border-top: none;
}

/* remove the left border from the first, fourth and seventh box */
.cell:nth-child(3n + 1) {
  border-left: none;
}

/* remove the bottom border from the last row */
.cell:last-child,
.cell:nth-child(8),
.cell:nth-child(7) {
  border-bottom: none;
}

/* remove the right border from the third, sixth and ninth box */
.cell:nth-child(3n + 3) {
  border-right: none;
}

.cell.x,
.cell.circle {
  cursor: not-allowed;
}

.cell.x::before,
.cell.x::after,
.cell.circle::before {
  background-color: black;
}

.board.x .cell:not(.x):not(.circle):hover::before,
.board.x .cell:not(.x):not(.circle):hover::after,
.board.circle .cell:not(.x):not(.circle):hover::before {
  background-color: lightgrey;
}

/* the not selector essentially allows us to hover on empty boxes that don't have the x or circle class */
.cell.x::before,
.cell.x::after,
.board.x .cell:not(.x):not(.circle):hover::before,
.board.x .cell:not(.x):not(.circle):hover::after {
  content: "";
  /* Inititally the x looked ugly and offset is because both the ::before and ::after are displayed next to each other in the document flow, because they are position static.  We need to position them absolutely, so they are going to have the exact same base, which is going to be the parent(which is set to relative - the cell) and they won't overlap over top of each other */
  position: absolute;
  width: calc(var(--mark-size) * 0.15);
  height: var(--mark-size);
}

.cell.x::before,
.board.x .cell:not(.x):not(.circle):hover::before {
  transform: rotate(45deg);
}

.cell.x::after,
.board.x .cell:not(.x):not(.circle):hover::after {
  transform: rotate(-45deg);
}

.cell.circle::before,
.cell.circle::after,
.board.circle .cell:not(.x):not(.circle):hover::before,
.board.circle .cell:not(.x):not(.circle):hover::after {
  content: "";
  position: absolute;
  border-radius: 50%;
}

/* larger of the two circles, will be behind */
.cell.circle::before,
.board.circle .cell:not(.x):not(.circle):hover::before {
  width: var(--mark-size);
  height: var(--mark-size);
}

/* smaller of the two circles, will be in front */
.cell.circle::after,
.board.circle .cell:not(.x):not(.circle):hover::after {
  width: calc(var(--mark-size) * 0.7);
  height: calc(var(--mark-size) * 0.7);
  background-color: white;
}

.winning-message {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.9);
  justify-content: center;
  align-items: center;
  color: white;
  font-size: 5rem;
  flex-direction: column;
}

.winning-message button {
  font-size: 3rem;
  background-color: white;
  border: 1px solid black;
  padding: 0.25em 0.5em;
  cursor: pointer;
}

.winning-message button:hover {
  background-color: black;
  color: white;
  border: white;
}

.winning-message.show {
  display: flex;
}
